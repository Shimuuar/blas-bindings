
* The tests for solving triangular systems fail when an ill-conditioned 
  matrix gets generated.  I have investigated some of the failing cases
  in R, and have determined this isn't a bug.  Ideally, we should only
  test with well-conditioned systems. 

* There is one remaining functional dependency in `Shaped x i | x -> i`.  We
  cannot get rid of it since GHC 6.10.1 has not yet implemented equality
  constraints in superclass contexts, which are required for MatrixShaped.
  When GHC implements this feature, get rid of this last remaining
  dependency.

* Add getSum/sum.  Put in re-write rules from scale and add to axpy.  Here
 is the old code and re-write rules:
 
    unsafeGetSum :: (BLAS1 e) => 
        e -> DVector s n e -> e -> DVector t n e -> IO (DVector r n e)
    unsafeGetSum 1 x beta y
        | beta /= 1 = unsafeGetSum beta y 1 x
    unsafeGetSum alpha x beta y
        | isConj x = do
            s <- unsafeGetSum (E.conj alpha) (conj x) (E.conj beta) (conj y)
            return (conj s)
        | otherwise = do
            s <- newCopy y
            scaleBy beta (unsafeThaw s)
            axpy alpha x (unsafeThaw s)
            return (unsafeCoerce s)

    {-# RULES
    "scale/plus"   forall k l x y. plus (scale k x) (scale l y) = add k x l y
    "scale1/plus"  forall k x y.   plus (scale k x) y = add k x 1 y
    "scale2/plus"  forall k x y.   plus x (scale k y) = add 1 x k y

    "scale/minus"  forall k l x y. minus (scale k x) (scale l y) = 
                                       add k x (-l) y
    "scale1/minus" forall k x y.   minus (scale k x) y = add k x (-1) y
    "scale2/minus" forall k x y.   minus x (scale k y) = add 1 x (-k) y
      #-}

* Add getSubmatrix function to MMatrix (?)

* Add getDense/toDense to MMatrix/IMatrix

* Put better checks in swapElem for WriteTensor

* Add "Mult" class and get rid of <**> ?

* Add "Solv" class and get rid of <\\> ?

* Optimization: Put 'isReal' in Elem class and specialize swap, copy, axpy, dot.

* Optimization: The ReadTensor/WriteTensor functions for Banded matrices are
really terrible.  Re-write these to be more efficient.
